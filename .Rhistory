symbols(x = 2, y = 2,  rectangles =  matrix(c(8,4), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(0, 5.5, length.out = 6)
xc <- rep(xc,2)
yc <- rep(c(1.1,3.1), each = 6)
symbols(xc, yc,  circles =  rep(rad,12),
bg = col[index], add = TRUE, inches = FALSE)
text(2, -1.5, labels  = "Random subsample used to build")
text(2, -2.5, labels  = "the tree (2/3 of original)")
text(1,2, labels = "A")
text(0,2, labels = "A")
text(-1,2, labels = "A")
text(-3,2, labels = "A")
text(-4,2, labels = "A")
text(-4,2, labels = "A", col = "red")
?text
plot(1, type="n", axes=F, xlab="", ylab="", xlim = c(-5,17), ylim= c(-11,10),
main = "Random Forest")
symbols(x = 7, y = 9,  rectangles =  matrix(c(10,6), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(2.5, 11.5, length.out = 9)
xc <- rep(xc,2)
yc <- rep(c(7.2,9.2), each = 9)
rad <- 0.3
set.seed(2000)
col <- sample(c("red", "green"), size = 18, prob = c(0.7, 0.3), replace = TRUE)
symbols(xc, yc,  circles =  rep(rad,18),
bg = col, add = TRUE, inches = FALSE)
## create 2nd rectangle
set.seed(100)
index <- sample(1:18, size = 12)
symbols(x = 2, y = 2,  rectangles =  matrix(c(8,4), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(0, 5.5, length.out = 6)
xc <- rep(xc,2)
yc <- rep(c(1.1,3.1), each = 6)
symbols(xc, yc,  circles =  rep(rad,12),
bg = col[index], add = TRUE, inches = FALSE)
text(2, -1.5, labels  = "Random subsample used to build")
text(2, -2.5, labels  = "the tree (2/3 of original)")
##
symbols(-4,2, circles = 0.5, bg = "red")
text(-4,2, labels = "A", col = "red")
## create 3rd rectangle
symbols(x = 14, y = 2,  rectangles =  matrix(c(8,4), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(11, 15, length.out = 3)
xc <- rep(xc,2)
yc <- rep(c(1.1,3.1), each = 3)
symbols(xc, yc,  circles =  rep(rad,6),
bg = col[-index], add = TRUE, inches = FALSE)
text(13, -1.5, labels  = "Random 'OOB' sample")
text(13, -2.5, labels  = "internally validate tree")
## create a decision tree
treeno <- 1 # 1, 2, "n"
x0 <- 1.35  # 1.35, 5.35, 13.35
y0 <- -4
r <- 0.25
coordinates <- treeCoordinates(x0, y0)
xl <- coordinates[1]
yl <- coordinates[2]
nc <- length(unlist(xl))
ax0l <- coordinates[3]
ay0l <- coordinates[4]
ax1l <- coordinates[5]
ay1l <- coordinates[6]
symbols(x = unlist(xl), y = unlist(yl),  circles = rep(r,nc),
bg = "red", add = TRUE, inches = FALSE)
arrows(unlist(ax0l), unlist(ay0l), unlist(ax1l), unlist(ay1l), length = 0.1)
## create second decision tree
x0 <- 12  # 1.35, 5.35, 13.35
y0 <- -4
coordinates <- treeCoordinates(x0, y0)
xl <- coordinates[1]
yl <- coordinates[2]
nc <- length(unlist(xl))
ax0l <- coordinates[3]
ay0l <- coordinates[4]
ax1l <- coordinates[5]
ay1l <- coordinates[6]
symbols(x = unlist(xl), y = unlist(yl),  circles = rep(r,nc),
bg = "blue", add = TRUE, inches = FALSE)
arrows(unlist(ax0l), unlist(ay0l), unlist(ax1l), unlist(ay1l), length = 0.1)
plot(1, type="n", axes=F, xlab="", ylab="", xlim = c(-5,17), ylim= c(-11,10),
main = "Random Forest")
symbols(x = 7, y = 9,  rectangles =  matrix(c(10,6), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(2.5, 11.5, length.out = 9)
xc <- rep(xc,2)
yc <- rep(c(7.2,9.2), each = 9)
rad <- 0.3
set.seed(2000)
col <- sample(c("red", "green"), size = 18, prob = c(0.7, 0.3), replace = TRUE)
symbols(xc, yc,  circles =  rep(rad,18),
bg = col, add = TRUE, inches = FALSE)
## create 2nd rectangle
set.seed(100)
index <- sample(1:18, size = 12)
symbols(x = 2, y = 2,  rectangles =  matrix(c(8,4), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(0, 5.5, length.out = 6)
xc <- rep(xc,2)
yc <- rep(c(1.1,3.1), each = 6)
symbols(xc, yc,  circles =  rep(rad,12),
bg = col[index], add = TRUE, inches = FALSE)
text(2, -1.5, labels  = "Random subsample used to build")
text(2, -2.5, labels  = "the tree (2/3 of original)")
##
symbols(-4,2, circles = 0.5, bg = "red", add = TRUE)
text(-4,2, labels = "A", col = "red")
plot(1, type="n", axes=F, xlab="", ylab="", xlim = c(-5,17), ylim= c(-11,10),
main = "Random Forest")
symbols(x = 7, y = 9,  rectangles =  matrix(c(10,6), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(2.5, 11.5, length.out = 9)
xc <- rep(xc,2)
yc <- rep(c(7.2,9.2), each = 9)
rad <- 0.3
set.seed(2000)
col <- sample(c("red", "green"), size = 18, prob = c(0.7, 0.3), replace = TRUE)
symbols(xc, yc,  circles =  rep(rad,18),
bg = col, add = TRUE, inches = FALSE)
## create 2nd rectangle
set.seed(100)
index <- sample(1:18, size = 12)
symbols(x = 2, y = 2,  rectangles =  matrix(c(8,4), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(0, 5.5, length.out = 6)
xc <- rep(xc,2)
yc <- rep(c(1.1,3.1), each = 6)
symbols(xc, yc,  circles =  rep(rad,12),
bg = col[index], add = TRUE, inches = FALSE)
text(2, -1.5, labels  = "Random subsample used to build")
text(2, -2.5, labels  = "the tree (2/3 of original)")
##
symbols(-4,2, circles = 0.05, bg = "red", add = TRUE)
text(-4,2, labels = "A", col = "red")
plot(1, type="n", axes=F, xlab="", ylab="", xlim = c(-5,17), ylim= c(-11,10),
main = "Random Forest")
symbols(x = 7, y = 9,  rectangles =  matrix(c(10,6), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(2.5, 11.5, length.out = 9)
xc <- rep(xc,2)
yc <- rep(c(7.2,9.2), each = 9)
rad <- 0.3
set.seed(2000)
col <- sample(c("red", "green"), size = 18, prob = c(0.7, 0.3), replace = TRUE)
symbols(xc, yc,  circles =  rep(rad,18),
bg = col, add = TRUE, inches = FALSE)
## create 2nd rectangle
set.seed(100)
index <- sample(1:18, size = 12)
symbols(x = 2, y = 2,  rectangles =  matrix(c(8,4), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(0, 5.5, length.out = 6)
xc <- rep(xc,2)
yc <- rep(c(1.1,3.1), each = 6)
symbols(xc, yc,  circles =  rep(rad,12),
bg = col[index], add = TRUE, inches = FALSE)
text(2, -1.5, labels  = "Random subsample used to build")
text(2, -2.5, labels  = "the tree (2/3 of original)")
##
symbols(-4,2, circles = 0.05, bg = "red", add = TRUE, inches = TRUE)
text(-4,2, labels = "A", col = "red")
plot(1, type="n", axes=F, xlab="", ylab="", xlim = c(-5,17), ylim= c(-11,10),
main = "Random Forest")
symbols(x = 7, y = 9,  rectangles =  matrix(c(10,6), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(2.5, 11.5, length.out = 9)
xc <- rep(xc,2)
yc <- rep(c(7.2,9.2), each = 9)
rad <- 0.3
set.seed(2000)
col <- sample(c("red", "green"), size = 18, prob = c(0.7, 0.3), replace = TRUE)
symbols(xc, yc,  circles =  rep(rad,18),
bg = col, add = TRUE, inches = FALSE)
## create 2nd rectangle
set.seed(100)
index <- sample(1:18, size = 12)
symbols(x = 2, y = 2,  rectangles =  matrix(c(8,4), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(0, 5.5, length.out = 6)
xc <- rep(xc,2)
yc <- rep(c(1.1,3.1), each = 6)
symbols(xc, yc,  circles =  rep(rad,12),
bg = col[index], add = TRUE, inches = FALSE)
text(2, -1.5, labels  = "Random subsample used to build")
text(2, -2.5, labels  = "the tree (2/3 of original)")
##
symbols(-4,2, circles = 0.05, bg = "red", add = TRUE, inches = FALSE)
text(-4,2, labels = "A", col = "red")
## create 3rd rectangle
symbols(x = 14, y = 2,  rectangles =  matrix(c(8,4), ncol=2),
bg = "blue", add = TRUE, inches = FALSE)
xc <- seq(11, 15, length.out = 3)
xc <- rep(xc,2)
yc <- rep(c(1.1,3.1), each = 3)
symbols(xc, yc,  circles =  rep(rad,6),
bg = col[-index], add = TRUE, inches = FALSE)
text(13, -1.5, labels  = "Random 'OOB' sample")
text(13, -2.5, labels  = "internally validate tree")
## create a decision tree
treeno <- 1 # 1, 2, "n"
x0 <- 1.35  # 1.35, 5.35, 13.35
y0 <- -4
r <- 0.25
coordinates <- treeCoordinates(x0, y0)
xl <- coordinates[1]
yl <- coordinates[2]
nc <- length(unlist(xl))
ax0l <- coordinates[3]
ay0l <- coordinates[4]
ax1l <- coordinates[5]
ay1l <- coordinates[6]
symbols(x = unlist(xl), y = unlist(yl),  circles = rep(r,nc),
bg = "red", add = TRUE, inches = FALSE)
arrows(unlist(ax0l), unlist(ay0l), unlist(ax1l), unlist(ay1l), length = 0.1)
## create second decision tree
x0 <- 12  # 1.35, 5.35, 13.35
y0 <- -4
coordinates <- treeCoordinates(x0, y0)
xl <- coordinates[1]
yl <- coordinates[2]
nc <- length(unlist(xl))
ax0l <- coordinates[3]
ay0l <- coordinates[4]
ax1l <- coordinates[5]
ay1l <- coordinates[6]
symbols(x = unlist(xl), y = unlist(yl),  circles = rep(r,nc),
bg = "blue", add = TRUE, inches = FALSE)
arrows(unlist(ax0l), unlist(ay0l), unlist(ax1l), unlist(ay1l), length = 0.1)
symbols(-4,2, circles = 0.05, bg = "red", add = TRUE, inches = FALSE)
text(-4,2, labels = "A", col = "red")
symbols(-4,2, circles = 0.5, bg = "red", add = TRUE, inches = FALSE)
symbols(-4,2, circles = 0.8, bg = "red", add = TRUE, inches = FALSE)
text(-4,2, labels = "A")
eyes <- margin.table(HairEyeColor, 2)
chisq.test(eyes)
eyes
?chisq.test
chisq.test(eyes, p = c(0.25,0.25,0.25,0.25))
barplot(eyes)
eyes
sum(eyes)
eye/sum(eye)
eyes/sum(eyes)
expProb <- data.frame(Browm=0.25, Blue = 0.25, Hazel = 0.25, Green = 0.25)
expProb
obsProb <- data.frame(eyes/sum(eyes))
obsProb
eyData <- data.frame(eyes/sum(eyes))
eyedf <- data.frame(eyes/sum(eyes))
eyedf
eyedf$expFreq <- c(0.25, 0.25, 0.25, 0.25)
eyedf
barplot(eyedf)
?barplot
barplot(eyedf[,2:3])
barplot(eyedf[,c(2:3)])
getwd()
?download.file
download.file(url, destfile = "demo.R", method, quiet = FALSE, mode = "w")
download.file(url, destfile = "demo.R", method = "curl", quiet = FALSE, mode = "w")
url <- "https://github.com/rkrtiwari/rEssential/blob/master/demo.R"
download.file(url, destfile = "demo.R", method = "curl", quiet = FALSE, mode = "w")
url <- "https://github.com/rkrtiwari/rEssential/blob/master/demo.R"
download.file(url, destfile = "demo.R", method = "curl", quiet = FALSE, mode = "w")
url <- "http://github.com/rkrtiwari/rEssential/blob/master/demo.R"
download.file(url, destfile = "demo.R", method = "curl", quiet = FALSE, mode = "w")
ls()
library(reshape2)
getwd()
setwd("C:\Users\USER\Documents")
head(Sonar)
summary(Sonar)
str(Sonar)
table(Sonar$Class)
iris
mtcars
?iris
?mtcars
setwd("C:\\Users\\USER\\Documents")
getwd()
runApp("nb/")
library(shiny)
runApp("nb/")
head(mtcars)
mtcars1 <- mtcars[,-1]
head(mtcars1)
pcaMtcars <- scale(mtcars1)
?prcomp
mtcars1 <- scale(mtcars1, center = TRUE, scale = TRUE)
mtcars1
is.data.frame(mtcars1)
names(mtcars1)
data.frame(mtcars1)
pcmtcars1 <- prcomp(mtcars, center = TRUE, scale = TRUE)
pcmtcars1$x
nMtcars <- pcmtcars1$x
nMtcars
nMtcars$mpg <- mtcars$mpg
nMtcars
nMtcars <- pcmtcars1$x
data.frame(nMtcars)
nMtcars$mpg <- mtcars$mpg
nMtcars <- pcmtcars1$x
nMtcars <- as.data.frame(nMtcars)
nMtcars$mpg <- mtcars$mpg
nMtcars
lmModel <- lm(mpg ~ ., data = nMtcars)
lmModel
library(pls)
?pcr
pcr.fit <- pcr(mpg ∼., data=mtcars ,scale=TRUE)
pcr.fit
summary(pcr.fit)
lmModel
lm(mtcars$mpg, mtcars$wt)
lm(mtcars$mpg ~ mtcars$wt)
getwd()
setwd("~/consultancyWork/")
list.files()
booking <- read.table("booking_table2.csv", sep = ",", n = 5)
?read.table
booking <- read.table("booking_table2.csv", sep = ",", nrows = 5)
booking
booking <- read.table("booking_table2.csv", nrows = 5)
booking
booking$V3 <- as.Date(booking$V3)
booking$V9 <- as.Date(booking$V9)
plot(booking$V3 ~ booking$V2)
plot(booking$V3, booking$V2)
hist(booking$V2)
hist(booking$V5)
hist(booking$V12)
nrow(booking$V3)
max(booking$V3)
min(booking$V3)
plot(booking$V3, booking$V2)
booking <- read.table("booking_table2.csv", nrows = -1)
booking <- read.table("booking_table2.csv", nrows = 9)
booking$V3 <- as.Date(booking$V3)
booking$V9 <- as.Date(booking$V9)
plot(booking$V3, booking$V2)
hist(booking$V12)
max(booking$V3)
min(booking$V3)
plot(booking$V3, booking$V2)
booking <- read.table("booking_table2_01Aug.csv", nrows = 9)
head(booking)
booking <- read.table("booking_table2_01Aug.csv", sep = ",", nrows = -1)
head(booking)
booking <- read.table("booking_table2_01Aug.csv", sep = ",", nrows = -1,
header = TRUE)
head(booking)
head(booking)
names(booking)
booking$activity_date <- as.Date(booking$activity_date)
booking$booking_date <- as.Date(booking$booking_date)
table(booking$agent_country)
barplot(table(booking$agent_country))
?barplot
barplot(table(booking$agent_country), horiz = FALSE)
barplot(table(booking$agent_country), horiz = TRUE)
?barplot
barplot(table(booking$agent_country), horiz = TRUE, las =2)
table(booking$agent_country)
barData <- table(booking$agent_country)
barplot(barData, horiz = TRUE, las =2)
barData <- sort(barData)
barplot(barData, horiz = TRUE, las =2)
barplot(barData[1:top_n,], horiz = TRUE, las =2)
top_n <- 5
barplot(barData[1:top_n,], horiz = TRUE, las =2)
barData
data.frame(barData)
barData <- sort(barData, decreasing = TRUE)
barData <- as.data.frame(barData)
barData
barplot(barData[1:top_n,], horiz = TRUE, las =2)
barplot(barData[1:top_n,], horiz = FALSE, las =2)
top_n <- 4
barplot(barData[1:top_n,], horiz = FALSE, las =2)
top_n <- 10
barplot(barData[1:top_n,], horiz = FALSE, las =2)
barData <- sort(barData, decreasing = FALSE)
bottom_n <- 5
barplot(barData[1:bottom_n,], horiz = FALSE)
barData <- table(booking$agent_country)
barData <- as.data.frame(barData)
barData
order(barData$Freq)
barData <- barData[order(barData$Freq), ]
index <- order(barData$Freq)
barData <- barData[index, ]
barData <- table(booking$agent_country)
barData <- as.data.frame(barData)
index <- order(barData$Freq)
barData <- barData[index, ]
top_n <- 10
barplot(barData[1:top_n,], horiz = FALSE)
barData
barplot(barData$Freq, horiz = FALSE)
index <- order(barData$Freq, decreasing = TRUE)
barData <- barData[index, ]
top_n <- 10
barplot(barData$Freq, horiz = FALSE)
barplot(barData$Freq[top_n], names.arg = barData$Var1[top_n], horiz = FALSE)
barData$Var1[top_n]
barplot(barData$Freq[1:top_n], names.arg = barData$Var1[1:top_n], horiz = FALSE)
top_n <- 5
barplot(barData$Freq[1:top_n], names.arg = barData$Var1[1:top_n], horiz = FALSE)
barplot(barData$Freq[1:top_n], names.arg = barData$Var1[1:top_n])
barplot(barData$Freq[1:bottom_n], names.arg = barData$Var1[1:top_n])
index <- order(barData$Freq, decreasing = FALSE)
barData <- barData[index, ]
bottom_n <- 5
barplot(barData$Freq[1:bottom_n], names.arg = barData$Var1[1:bottom_n])
max <- nrow(barData)
min <- 1
max <- nrow(barData)
min <- 1
index <- order(barData$Freq, decreasing = FALSE)
barData <- barData[index, ]
barplot(barData$Freq[min:max], names.arg = barData$Var1[min:max])
min <- 5
max <- 8
index <- order(barData$Freq, decreasing = FALSE)
barData <- barData[index, ]
barplot(barData$Freq[min:max], names.arg = barData$Var1[min:max])
library(shiny)
runApp("app/")
runApp("app/")
runApp("app/")
runApp("app/")
runApp("app/")
runApp("app/")
runApp("app/")
runApp("app/")
runApp("app/")
runApp("app/")
?selectInput
runApp("app/")
runApp("app/")
runApp("app/")
booking$activity_date <- as.Date(booking$activity_date)
booking <- read.table("booking_table2_01Aug.csv", sep = ",", nrows = -1,
header = TRUE)
booking <- read.table("data/booking_table2_01Aug.csv", sep = ",", nrows = -1,
header = TRUE)
head(booking)
names(booking)
booking$activity_date <- as.Date(booking$activity_date)
booking$booking_date <- as.Date(booking$booking_date)
head(booking)
plot(booking_date, booking$activity_date)
plot(booking$booking_date, booking$activity_date)
nrow(booking)
head(booking)
head(booking$activity_date)
month(head(booking$activity_date))
?months
months(head(booking$activity_date))
table(booking$activity_id)
booking$activity_id <- factor(booking$activity_id)
table(booking$activity_id)
sum(booking$activity_id==0)
sum(booking$activity_id==1)
sum(booking$activity_id==21049)
names(booking)
months(head(booking$activity_date))
head(booking$pickup_required)
head(booking$booking_amount)
plot(booking$booking_date, booking$booking_amount)
plot(booking$booking_date, booking$booking_amount, ylim = c(0,5000))
min(booking$booking_date)
max(booking$booking_date)
tapply(booking$booking_amount, month(booking$booking_date), sum)
tapply(booking$booking_amount, months(booking$booking_date), sum)
monthlyBookingAmount <- tapply(booking$booking_amount, months(booking$booking_date), sum)
monthlyBookingAmount
monthlyBookingAmount <- as.data.frame(monthlyBookingAmount)
monthlyBookingAmount
monthlyBookingAmount <- tapply(booking$booking_amount, months(booking$booking_date), sum)
monthlyBookingAmount <- as.data.frame(monthlyBookingAmount)
barplot(monthlyBookingAmount$)
barplot(monthlyBookingAmount$monthlyBookingAmount)
monthlyBookingAmount
monthlyBookingAmount <- tapply(booking$booking_amount, months(booking$booking_date), sum)
print(monthlyBookingAmount)
monthlyBookingAmount
monthlyBookingAmount <- as.data.frame(monthlyBookingAmount)
print(monthlyBookingAmount)
monthlyBookingAmount[c(5)]
monthlyBookingAmount[c(5),]
monthlyBookingAmount[c(5,4),]
monthlyBookingAmount[c(5,4,8,1,9),]
monthlyBookingAmount[c(5,4,8,1,9,7),]
monthlyBookingAmount[c(5,4,8,1,9,7,6),]
monthlyBookingAmount[c(5,4,8,1,9,7,6,2),]
monthlyBookingAmount[c(5,4,8,1,9,7,6,2,12),]
monthlyBookingAmount[c(5,4,8,1,9,7,6,2,12,11,10),]
monthlyBookingAmount <- monthlyBookingAmount[c(5,4,8,1,9,7,6,2,12,11,10),]
barplot(monthlyBookingAmount$monthlyBookingAmount)
monthlyBookingAmount
monthlyBookingAmount <- as.data.frame(monthlyBookingAmount)
barplot(monthlyBookingAmount$monthlyBookingAmount)
barplot(monthlyBookingAmount$monthlyBookingAmount, horiz = FALSE)
barplot(monthlyBookingAmount$monthlyBookingAmount, horiz = TRUE)
barplot(monthlyBookingAmount$monthlyBookingAmount, horiz = TRUE, las =2)
?year
?years
